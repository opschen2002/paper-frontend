{"ast":null,"code":"import { ref, reactive } from 'vue';\nimport DataTable from '@/components/common/DataTable.vue';\nimport ScoreCard from '@/components/common/ScoreCard.vue';\nimport { teacherApi } from '@/api';\nimport { ElMessage } from 'element-plus';\nexport default {\n  name: 'ScoresView',\n  components: {\n    DataTable,\n    ScoreCard\n  },\n  setup() {\n    const loading = ref(false);\n    const scoreList = ref([]);\n    const total = ref(0);\n    const dialogVisible = ref(false);\n    const currentScore = ref(null);\n    const queryForm = reactive({\n      className: '',\n      dateRange: null,\n      page: 1\n    });\n    const handleQuery = async () => {\n      try {\n        loading.value = true;\n        let res;\n        if (queryForm.dateRange && queryForm.dateRange.length === 2) {\n          res = await teacherApi.getScoresByDateRange(queryForm.dateRange[0], queryForm.dateRange[1]);\n        } else {\n          res = await teacherApi.getClassScores(queryForm.className);\n        }\n        scoreList.value = res.list || [];\n        total.value = res.total || 0;\n      } catch (error) {\n        ElMessage.error('查询失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n    const handlePageChange = page => {\n      queryForm.page = page;\n      handleQuery();\n    };\n    const handleViewDetail = row => {\n      currentScore.value = row;\n      dialogVisible.value = true;\n    };\n    const formatDate = date => {\n      if (!date) return '';\n      return new Date(date).toLocaleDateString();\n    };\n    return {\n      loading,\n      scoreList,\n      total,\n      queryForm,\n      dialogVisible,\n      currentScore,\n      handleQuery,\n      handlePageChange,\n      handleViewDetail,\n      formatDate\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","DataTable","ScoreCard","teacherApi","ElMessage","name","components","setup","loading","scoreList","total","dialogVisible","currentScore","queryForm","className","dateRange","page","handleQuery","value","res","length","getScoresByDateRange","getClassScores","list","error","handlePageChange","handleViewDetail","row","formatDate","date","Date","toLocaleDateString"],"sources":["C:\\Users\\陈章宇\\Desktop\\test\\分步骤完成\\v7\\frontend\\paper-frontend\\src\\views\\teacher\\ScoresView.vue"],"sourcesContent":["<template>\r\n  <div class=\"scores-container\">\r\n    <el-card>\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <h3>成绩查询</h3>\r\n        </div>\r\n      </template>\r\n\r\n      <el-form :inline=\"true\" :model=\"queryForm\" class=\"search-form\">\r\n        <el-form-item label=\"班级\">\r\n          <el-input v-model=\"queryForm.className\" placeholder=\"请输入班级\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"时间范围\">\r\n          <el-date-picker\r\n            v-model=\"queryForm.dateRange\"\r\n            type=\"daterange\"\r\n            range-separator=\"至\"\r\n            start-placeholder=\"开始日期\"\r\n            end-placeholder=\"结束日期\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleQuery\">查询</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <DataTable\r\n        :loading=\"loading\"\r\n        :table-data=\"scoreList\"\r\n        :total=\"total\"\r\n        @page-change=\"handlePageChange\"\r\n      >\r\n        <el-table-column prop=\"studentId\" label=\"学号\" />\r\n        <el-table-column prop=\"name\" label=\"姓名\" />\r\n        <el-table-column prop=\"className\" label=\"班级\" />\r\n        <el-table-column prop=\"testDate\" label=\"测试日期\">\r\n          <template #default=\"{ row }\">\r\n            {{ formatDate(row.testDate) }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"totalScore\" label=\"总分\" />\r\n        <el-table-column label=\"操作\">\r\n          <template #default=\"{ row }\">\r\n            <el-button type=\"primary\" link @click=\"handleViewDetail(row)\">\r\n              查看详情\r\n            </el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </DataTable>\r\n    </el-card>\r\n\r\n    <!-- 详情对话框 -->\r\n    <el-dialog\r\n      v-model=\"dialogVisible\"\r\n      title=\"成绩详情\"\r\n      width=\"50%\"\r\n    >\r\n      <ScoreCard\r\n        v-if=\"currentScore\"\r\n        :score-data=\"currentScore\"\r\n        :editable=\"false\"\r\n      />\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive } from 'vue'\r\nimport DataTable from '@/components/common/DataTable.vue'\r\nimport ScoreCard from '@/components/common/ScoreCard.vue'\r\nimport { teacherApi } from '@/api'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nexport default {\r\n  name: 'ScoresView',\r\n  components: {\r\n    DataTable,\r\n    ScoreCard\r\n  },\r\n  setup() {\r\n    const loading = ref(false)\r\n    const scoreList = ref([])\r\n    const total = ref(0)\r\n    const dialogVisible = ref(false)\r\n    const currentScore = ref(null)\r\n\r\n    const queryForm = reactive({\r\n      className: '',\r\n      dateRange: null,\r\n      page: 1\r\n    })\r\n\r\n    const handleQuery = async () => {\r\n      try {\r\n        loading.value = true\r\n        let res\r\n        if (queryForm.dateRange && queryForm.dateRange.length === 2) {\r\n          res = await teacherApi.getScoresByDateRange(\r\n            queryForm.dateRange[0],\r\n            queryForm.dateRange[1]\r\n          )\r\n        } else {\r\n          res = await teacherApi.getClassScores(queryForm.className)\r\n        }\r\n        scoreList.value = res.list || []\r\n        total.value = res.total || 0\r\n      } catch (error) {\r\n        ElMessage.error('查询失败')\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    const handlePageChange = (page) => {\r\n      queryForm.page = page\r\n      handleQuery()\r\n    }\r\n\r\n    const handleViewDetail = (row) => {\r\n      currentScore.value = row\r\n      dialogVisible.value = true\r\n    }\r\n\r\n    const formatDate = (date) => {\r\n      if (!date) return ''\r\n      return new Date(date).toLocaleDateString()\r\n    }\r\n\r\n    return {\r\n      loading,\r\n      scoreList,\r\n      total,\r\n      queryForm,\r\n      dialogVisible,\r\n      currentScore,\r\n      handleQuery,\r\n      handlePageChange,\r\n      handleViewDetail,\r\n      formatDate\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.scores-container {\r\n  padding: 20px;\r\n}\r\n\r\n.search-form {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n</style>"],"mappings":"AAoEA,SAASA,GAAG,EAAEC,QAAO,QAAS,KAAI;AAClC,OAAOC,SAAQ,MAAO,mCAAkC;AACxD,OAAOC,SAAQ,MAAO,mCAAkC;AACxD,SAASC,UAAS,QAAS,OAAM;AACjC,SAASC,SAAQ,QAAS,cAAa;AAEvC,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,UAAU,EAAE;IACVL,SAAS;IACTC;EACF,CAAC;EACDK,KAAKA,CAAA,EAAG;IACN,MAAMC,OAAM,GAAIT,GAAG,CAAC,KAAK;IACzB,MAAMU,SAAQ,GAAIV,GAAG,CAAC,EAAE;IACxB,MAAMW,KAAI,GAAIX,GAAG,CAAC,CAAC;IACnB,MAAMY,aAAY,GAAIZ,GAAG,CAAC,KAAK;IAC/B,MAAMa,YAAW,GAAIb,GAAG,CAAC,IAAI;IAE7B,MAAMc,SAAQ,GAAIb,QAAQ,CAAC;MACzBc,SAAS,EAAE,EAAE;MACbC,SAAS,EAAE,IAAI;MACfC,IAAI,EAAE;IACR,CAAC;IAED,MAAMC,WAAU,GAAI,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACFT,OAAO,CAACU,KAAI,GAAI,IAAG;QACnB,IAAIC,GAAE;QACN,IAAIN,SAAS,CAACE,SAAQ,IAAKF,SAAS,CAACE,SAAS,CAACK,MAAK,KAAM,CAAC,EAAE;UAC3DD,GAAE,GAAI,MAAMhB,UAAU,CAACkB,oBAAoB,CACzCR,SAAS,CAACE,SAAS,CAAC,CAAC,CAAC,EACtBF,SAAS,CAACE,SAAS,CAAC,CAAC,CACvB;QACF,OAAO;UACLI,GAAE,GAAI,MAAMhB,UAAU,CAACmB,cAAc,CAACT,SAAS,CAACC,SAAS;QAC3D;QACAL,SAAS,CAACS,KAAI,GAAIC,GAAG,CAACI,IAAG,IAAK,EAAC;QAC/Bb,KAAK,CAACQ,KAAI,GAAIC,GAAG,CAACT,KAAI,IAAK;MAC7B,EAAE,OAAOc,KAAK,EAAE;QACdpB,SAAS,CAACoB,KAAK,CAAC,MAAM;MACxB,UAAU;QACRhB,OAAO,CAACU,KAAI,GAAI,KAAI;MACtB;IACF;IAEA,MAAMO,gBAAe,GAAKT,IAAI,IAAK;MACjCH,SAAS,CAACG,IAAG,GAAIA,IAAG;MACpBC,WAAW,CAAC;IACd;IAEA,MAAMS,gBAAe,GAAKC,GAAG,IAAK;MAChCf,YAAY,CAACM,KAAI,GAAIS,GAAE;MACvBhB,aAAa,CAACO,KAAI,GAAI,IAAG;IAC3B;IAEA,MAAMU,UAAS,GAAKC,IAAI,IAAK;MAC3B,IAAI,CAACA,IAAI,EAAE,OAAO,EAAC;MACnB,OAAO,IAAIC,IAAI,CAACD,IAAI,CAAC,CAACE,kBAAkB,CAAC;IAC3C;IAEA,OAAO;MACLvB,OAAO;MACPC,SAAS;MACTC,KAAK;MACLG,SAAS;MACTF,aAAa;MACbC,YAAY;MACZK,WAAW;MACXQ,gBAAgB;MAChBC,gBAAgB;MAChBE;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}