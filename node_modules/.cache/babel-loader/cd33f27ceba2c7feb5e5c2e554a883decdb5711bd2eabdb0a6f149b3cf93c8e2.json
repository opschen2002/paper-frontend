{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createBlock as _createBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"scores-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_DataTable = _resolveComponent(\"DataTable\");\n  const _component_ScoreCard = _resolveComponent(\"ScoreCard\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_DataTable, {\n    loading: $setup.loading,\n    \"table-data\": $setup.scoreList,\n    total: $setup.total,\n    onPageChange: $setup.handlePageChange\n  }, {\n    header: _withCtx(() => [_createVNode(_component_el_form, {\n      inline: true,\n      model: $setup.queryForm\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"学号\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.queryForm.studentId,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.queryForm.studentId = $event),\n          placeholder: \"请输入学号\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: $setup.handleQuery\n        }, {\n          default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"查询\")])),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])]),\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      prop: \"studentId\",\n      label: \"学号\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"name\",\n      label: \"姓名\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"className\",\n      label: \"班级\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"totalScore\",\n      label: \"总分\"\n    }), _createVNode(_component_el_table_column, {\n      label: \"操作\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $event => $setup.handleEdit(row)\n      }, {\n        default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"编辑\")])),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"loading\", \"table-data\", \"total\", \"onPageChange\"]), _createCommentVNode(\" 编辑对话框 \"), _createVNode(_component_el_dialog, {\n    modelValue: $setup.dialogVisible,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.dialogVisible = $event),\n    title: \"编辑成绩\",\n    width: \"50%\"\n  }, {\n    default: _withCtx(() => [$setup.currentScore ? (_openBlock(), _createBlock(_component_ScoreCard, {\n      key: 0,\n      \"score-data\": $setup.currentScore,\n      editable: true,\n      onUpdate: $setup.handleUpdate\n    }, null, 8 /* PROPS */, [\"score-data\", \"onUpdate\"])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_DataTable","loading","$setup","scoreList","total","onPageChange","handlePageChange","header","_withCtx","_component_el_form","inline","model","queryForm","default","_component_el_form_item","label","_component_el_input","modelValue","studentId","_cache","$event","placeholder","_","_component_el_button","type","onClick","handleQuery","_createTextVNode","_component_el_table_column","prop","row","handleEdit","_createCommentVNode","_component_el_dialog","dialogVisible","title","width","currentScore","_createBlock","_component_ScoreCard","key","editable","onUpdate","handleUpdate"],"sources":["C:\\Users\\陈章宇\\Desktop\\test\\分步骤完成\\v7\\frontend\\paper-frontend\\src\\views\\admin\\ScoresView.vue"],"sourcesContent":["<template>\n  <div class=\"scores-container\">\n    <DataTable\n      :loading=\"loading\"\n      :table-data=\"scoreList\"\n      :total=\"total\"\n      @page-change=\"handlePageChange\"\n    >\n      <template #header>\n        <el-form :inline=\"true\" :model=\"queryForm\">\n          <el-form-item label=\"学号\">\n            <el-input v-model=\"queryForm.studentId\" placeholder=\"请输入学号\" />\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"handleQuery\">查询</el-button>\n          </el-form-item>\n        </el-form>\n      </template>\n\n      <el-table-column prop=\"studentId\" label=\"学号\" />\n      <el-table-column prop=\"name\" label=\"姓名\" />\n      <el-table-column prop=\"className\" label=\"班级\" />\n      <el-table-column prop=\"totalScore\" label=\"总分\" />\n      <el-table-column label=\"操作\">\n        <template #default=\"{ row }\">\n          <el-button type=\"primary\" @click=\"handleEdit(row)\">编辑</el-button>\n        </template>\n      </el-table-column>\n    </DataTable>\n\n    <!-- 编辑对话框 -->\n    <el-dialog\n      v-model=\"dialogVisible\"\n      title=\"编辑成绩\"\n      width=\"50%\"\n    >\n      <ScoreCard\n        v-if=\"currentScore\"\n        :score-data=\"currentScore\"\n        :editable=\"true\"\n        @update=\"handleUpdate\"\n      />\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive } from 'vue'\nimport DataTable from '@/components/common/DataTable.vue'\nimport ScoreCard from '@/components/common/ScoreCard.vue'\nimport { adminApi } from '@/api'\nimport { ElMessage } from 'element-plus'\n\nexport default {\n  name: 'ScoresView',\n  components: { DataTable, ScoreCard },\n  setup() {\n    const loading = ref(false)\n    const scoreList = ref([])\n    const total = ref(0)\n    const dialogVisible = ref(false)\n    const currentScore = ref(null)\n    \n    const queryForm = reactive({\n      studentId: '',\n      page: 1\n    })\n\n    const handleQuery = async () => {\n      try {\n        loading.value = true\n        const res = await adminApi.getStudentScore(queryForm.studentId)\n        if (res) {\n          scoreList.value = [res]\n          total.value = 1\n        }\n      } catch (error) {\n        ElMessage.error('查询失败')\n      } finally {\n        loading.value = false\n      }\n    }\n\n    const handlePageChange = (page) => {\n      queryForm.page = page\n      handleQuery()\n    }\n\n    const handleEdit = (row) => {\n      currentScore.value = row\n      dialogVisible.value = true\n    }\n\n    const handleUpdate = async (data) => {\n      try {\n        await adminApi.updateScore(data)\n        ElMessage.success('更新成功')\n        dialogVisible.value = false\n        handleQuery()\n      } catch (error) {\n        ElMessage.error('更新失败')\n      }\n    }\n\n    return {\n      loading,\n      scoreList,\n      total,\n      queryForm,\n      dialogVisible,\n      currentScore,\n      handleQuery,\n      handlePageChange,\n      handleEdit,\n      handleUpdate\n    }\n  }\n}\n</script>"],"mappings":";;EACOA,KAAK,EAAC;AAAkB;;;;;;;;;;uBAA7BC,mBAAA,CA0CM,OA1CNC,UA0CM,GAzCJC,YAAA,CA0BYC,oBAAA;IAzBTC,OAAO,EAAEC,MAAA,CAAAD,OAAO;IAChB,YAAU,EAAEC,MAAA,CAAAC,SAAS;IACrBC,KAAK,EAAEF,MAAA,CAAAE,KAAK;IACZC,YAAW,EAAEH,MAAA,CAAAI;;IAEHC,MAAM,EAAAC,QAAA,CACf,MAOU,CAPVT,YAAA,CAOUU,kBAAA;MAPAC,MAAM,EAAE,IAAI;MAAGC,KAAK,EAAET,MAAA,CAAAU;;MATxCC,OAAA,EAAAL,QAAA,CAUU,MAEe,CAFfT,YAAA,CAEee,uBAAA;QAFDC,KAAK,EAAC;MAAI;QAVlCF,OAAA,EAAAL,QAAA,CAWY,MAA8D,CAA9DT,YAAA,CAA8DiB,mBAAA;UAX1EC,UAAA,EAW+Bf,MAAA,CAAAU,SAAS,CAACM,SAAS;UAXlD,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAW+BlB,MAAA,CAAAU,SAAS,CAACM,SAAS,GAAAE,MAAA;UAAEC,WAAW,EAAC;;QAXhEC,CAAA;UAaUvB,YAAA,CAEee,uBAAA;QAfzBD,OAAA,EAAAL,QAAA,CAcY,MAA6D,CAA7DT,YAAA,CAA6DwB,oBAAA;UAAlDC,IAAI,EAAC,SAAS;UAAEC,OAAK,EAAEvB,MAAA,CAAAwB;;UAd9Cb,OAAA,EAAAL,QAAA,CAc2D,MAAEW,MAAA,QAAAA,MAAA,OAd7DQ,gBAAA,CAc2D,IAAE,E;UAd7DL,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;;IAAAT,OAAA,EAAAL,QAAA,CAmBM,MAA+C,CAA/CT,YAAA,CAA+C6B,0BAAA;MAA9BC,IAAI,EAAC,WAAW;MAACd,KAAK,EAAC;QACxChB,YAAA,CAA0C6B,0BAAA;MAAzBC,IAAI,EAAC,MAAM;MAACd,KAAK,EAAC;QACnChB,YAAA,CAA+C6B,0BAAA;MAA9BC,IAAI,EAAC,WAAW;MAACd,KAAK,EAAC;QACxChB,YAAA,CAAgD6B,0BAAA;MAA/BC,IAAI,EAAC,YAAY;MAACd,KAAK,EAAC;QACzChB,YAAA,CAIkB6B,0BAAA;MAJDb,KAAK,EAAC;IAAI;MACdF,OAAO,EAAAL,QAAA,CAChB,CAAiE;QAD7CsB;MAAG,OACvB/B,YAAA,CAAiEwB,oBAAA;QAAtDC,IAAI,EAAC,SAAS;QAAEC,OAAK,EAAAL,MAAA,IAAElB,MAAA,CAAA6B,UAAU,CAACD,GAAG;;QAzB1DjB,OAAA,EAAAL,QAAA,CAyB6D,MAAEW,MAAA,QAAAA,MAAA,OAzB/DQ,gBAAA,CAyB6D,IAAE,E;QAzB/DL,CAAA;;MAAAA,CAAA;;IAAAA,CAAA;yEA8BIU,mBAAA,WAAc,EACdjC,YAAA,CAWYkC,oBAAA;IA1ChBhB,UAAA,EAgCef,MAAA,CAAAgC,aAAa;IAhC5B,uBAAAf,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAgCelB,MAAA,CAAAgC,aAAa,GAAAd,MAAA;IACtBe,KAAK,EAAC,MAAM;IACZC,KAAK,EAAC;;IAlCZvB,OAAA,EAAAL,QAAA,CAmCiB,MAGhB,CADaN,MAAA,CAAAmC,YAAY,I,cADpBC,YAAA,CAKEC,oBAAA;MAzCRC,GAAA;MAsCS,YAAU,EAAEtC,MAAA,CAAAmC,YAAY;MACxBI,QAAQ,EAAE,IAAI;MACdC,QAAM,EAAExC,MAAA,CAAAyC;2DAxCjBX,mBAAA,e;IAAAV,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}