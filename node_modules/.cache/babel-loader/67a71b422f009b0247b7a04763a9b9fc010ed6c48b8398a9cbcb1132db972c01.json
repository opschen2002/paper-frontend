{"ast":null,"code":"import request from '@/utils/request';\nimport { API_URLS } from './config';\nimport { ElMessage } from 'element-plus';\nexport const authApi = {\n  async login(data) {\n    try {\n      console.log('开始登录请求:', {\n        url: API_URLS.LOGIN,\n        data: data\n      });\n\n      // 直接使用 axios 发送请求，不使用实例\n      const response = await request({\n        url: API_URLS.LOGIN,\n        method: 'post',\n        data: data\n      });\n      console.log('登录响应:', response);\n      return response;\n    } catch (error) {\n      console.error('登录请求失败:', error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["request","API_URLS","ElMessage","authApi","login","data","console","log","url","LOGIN","response","method","error"],"sources":["C:/Users/陈章宇/Desktop/test/分步骤完成/v7/frontend/paper-frontend/src/api/auth.js"],"sourcesContent":["import request from '@/utils/request'\nimport { API_URLS } from './config'\nimport { ElMessage } from 'element-plus'\n\nexport const authApi = {\n  async login(data) {\n    try {\n      console.log('开始登录请求:', {\n        url: API_URLS.LOGIN,\n        data: data\n      })\n\n      // 直接使用 axios 发送请求，不使用实例\n      const response = await request({\n        url: API_URLS.LOGIN,\n        method: 'post',\n        data: data\n      })\n\n      console.log('登录响应:', response)\n      return response\n\n    } catch (error) {\n      console.error('登录请求失败:', error)\n      throw error\n    }\n  }\n}"],"mappings":"AAAA,OAAOA,OAAO,MAAM,iBAAiB;AACrC,SAASC,QAAQ,QAAQ,UAAU;AACnC,SAASC,SAAS,QAAQ,cAAc;AAExC,OAAO,MAAMC,OAAO,GAAG;EACrB,MAAMC,KAAKA,CAACC,IAAI,EAAE;IAChB,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE;QACrBC,GAAG,EAAEP,QAAQ,CAACQ,KAAK;QACnBJ,IAAI,EAAEA;MACR,CAAC,CAAC;;MAEF;MACA,MAAMK,QAAQ,GAAG,MAAMV,OAAO,CAAC;QAC7BQ,GAAG,EAAEP,QAAQ,CAACQ,KAAK;QACnBE,MAAM,EAAE,MAAM;QACdN,IAAI,EAAEA;MACR,CAAC,CAAC;MAEFC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEG,QAAQ,CAAC;MAC9B,OAAOA,QAAQ;IAEjB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdN,OAAO,CAACM,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;MAC/B,MAAMA,KAAK;IACb;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}