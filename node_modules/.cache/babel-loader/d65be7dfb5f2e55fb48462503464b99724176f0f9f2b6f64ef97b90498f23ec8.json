{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"upload-container\"\n};\nconst _hoisted_2 = {\n  class: \"tip\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_upload = _resolveComponent(\"el-upload\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_upload, {\n    class: \"upload\",\n    action: $props.action,\n    headers: $setup.headers,\n    \"before-upload\": $setup.beforeUpload,\n    \"on-success\": $setup.handleSuccess,\n    \"on-error\": $setup.handleError,\n    accept: $props.accept\n  }, {\n    trigger: _withCtx(() => [_createVNode(_component_el_button, {\n      type: \"primary\"\n    }, {\n      default: _withCtx(() => _cache[0] || (_cache[0] = [_createTextVNode(\"选择文件\")])),\n      _: 1 /* STABLE */\n    })]),\n    tip: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, _toDisplayString($props.tip), 1 /* TEXT */)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"action\", \"headers\", \"before-upload\", \"on-success\", \"on-error\", \"accept\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_el_upload","action","$props","headers","$setup","beforeUpload","handleSuccess","handleError","accept","trigger","_withCtx","_component_el_button","type","default","_cache","_createTextVNode","_","tip","_createElementVNode","_hoisted_2","_toDisplayString"],"sources":["C:\\Users\\陈章宇\\Desktop\\test\\分步骤完成\\v7\\frontend\\paper-frontend\\src\\components\\common\\FileUpload.vue"],"sourcesContent":["<template>\n  <div class=\"upload-container\">\n    <el-upload\n      class=\"upload\"\n      :action=\"action\"\n      :headers=\"headers\"\n      :before-upload=\"beforeUpload\"\n      :on-success=\"handleSuccess\"\n      :on-error=\"handleError\"\n      :accept=\"accept\"\n    >\n      <template #trigger>\n        <el-button type=\"primary\">选择文件</el-button>\n      </template>\n      <template #tip>\n        <div class=\"tip\">{{ tip }}</div>\n      </template>\n    </el-upload>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport { ElMessage } from 'element-plus'\n\nexport default {\n  name: 'FileUpload',\n  props: {\n    action: {\n      type: String,\n      required: true\n    },\n    accept: {\n      type: String,\n      default: '.xlsx,.xls'\n    },\n    tip: {\n      type: String,\n      default: '只能上传 Excel 文件'\n    },\n    maxSize: {\n      type: Number,\n      default: 5 // MB\n    }\n  },\n  emits: ['upload-success', 'upload-error'],\n  setup(props, { emit }) {\n    const headers = ref({\n      // 可以添加token等认证信息\n    })\n\n    const beforeUpload = (file) => {\n      const isValidType = props.accept.split(',').some(type => \n        file.name.toLowerCase().endsWith(type.replace('.', ''))\n      )\n      \n      const isLessThanMaxSize = file.size / 1024 / 1024 < props.maxSize\n\n      if (!isValidType) {\n        ElMessage.error('请上传正确的文件格式！')\n        return false\n      }\n\n      if (!isLessThanMaxSize) {\n        ElMessage.error(`文件大小不能超过 ${props.maxSize}MB！`)\n        return false\n      }\n\n      return true\n    }\n\n    const handleSuccess = (response) => {\n      ElMessage.success('上传成功！')\n      emit('upload-success', response)\n    }\n\n    const handleError = (error) => {\n      ElMessage.error('上传失败！')\n      emit('upload-error', error)\n    }\n\n    return {\n      headers,\n      beforeUpload,\n      handleSuccess,\n      handleError\n    }\n  }\n}\n</script>\n\n<style scoped>\n.upload-container {\n  text-align: center;\n  padding: 20px;\n}\n\n.tip {\n  font-size: 12px;\n  color: #909399;\n  margin-top: 10px;\n}\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAkB;;EAclBA,KAAK,EAAC;AAAK;;;;uBAdtBC,mBAAA,CAiBM,OAjBNC,UAiBM,GAhBJC,YAAA,CAeYC,oBAAA;IAdVJ,KAAK,EAAC,QAAQ;IACbK,MAAM,EAAEC,MAAA,CAAAD,MAAM;IACdE,OAAO,EAAEC,MAAA,CAAAD,OAAO;IAChB,eAAa,EAAEC,MAAA,CAAAC,YAAY;IAC3B,YAAU,EAAED,MAAA,CAAAE,aAAa;IACzB,UAAQ,EAAEF,MAAA,CAAAG,WAAW;IACrBC,MAAM,EAAEN,MAAA,CAAAM;;IAEEC,OAAO,EAAAC,QAAA,CAChB,MAA0C,CAA1CX,YAAA,CAA0CY,oBAAA;MAA/BC,IAAI,EAAC;IAAS;MAZjCC,OAAA,EAAAH,QAAA,CAYkC,MAAII,MAAA,QAAAA,MAAA,OAZtCC,gBAAA,CAYkC,MAAI,E;MAZtCC,CAAA;;IAciBC,GAAG,EAAAP,QAAA,CACZ,MAAgC,CAAhCQ,mBAAA,CAAgC,OAAhCC,UAAgC,EAAAC,gBAAA,CAAZlB,MAAA,CAAAe,GAAG,iB;IAf/BD,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}