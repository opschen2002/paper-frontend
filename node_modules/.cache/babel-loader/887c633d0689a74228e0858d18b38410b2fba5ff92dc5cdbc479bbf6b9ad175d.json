{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport { createRouter, createWebHistory } from 'vue-router';\nimport LoginView from '../views/login/LoginView.vue';\nimport AdminLayout from '../views/admin/AdminLayout.vue';\nimport TeacherLayout from '../views/teacher/TeacherLayout.vue';\nimport StudentView from '../views/student/StudentView.vue';\nconst routes = [{\n  path: '/',\n  redirect: '/login'\n}, {\n  path: '/login',\n  name: 'Login',\n  component: LoginView\n}, {\n  path: '/admin',\n  component: AdminLayout,\n  children: [{\n    path: 'import',\n    component: () => import('../views/admin/ImportView.vue')\n  }, {\n    path: 'scores',\n    component: () => import('../views/admin/ScoresView.vue')\n  }],\n  meta: {\n    requiresAuth: true,\n    role: 'admin'\n  }\n}, {\n  path: '/teacher',\n  component: TeacherLayout,\n  children: [{\n    path: 'query',\n    component: () => import('../views/teacher/QueryView.vue')\n  }, {\n    path: 'scores',\n    component: () => import('../views/teacher/ScoresView.vue')\n  }],\n  meta: {\n    requiresAuth: true,\n    role: 'teacher'\n  }\n}, {\n  path: '/student',\n  component: StudentView,\n  meta: {\n    requiresAuth: true,\n    role: 'student'\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\n// 路由守卫\nrouter.beforeEach((to, from, next) => {\n  const role = localStorage.getItem('role');\n  const username = localStorage.getItem('username');\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    if (!username) {\n      // 使用 username 检查登录状态\n      next('/login');\n    } else if (to.meta.role && to.meta.role !== role) {\n      next('/login');\n    } else {\n      next();\n    }\n  } else {\n    if (username && to.path === '/login') {\n      // 使用 username 检查登录状态\n      next(`/${role}`);\n    } else {\n      next();\n    }\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","LoginView","AdminLayout","TeacherLayout","StudentView","routes","path","redirect","name","component","children","meta","requiresAuth","role","router","history","process","env","BASE_URL","beforeEach","to","from","next","localStorage","getItem","username","matched","some","record"],"sources":["C:/Users/陈章宇/Desktop/test/分步骤完成/v7/frontend/paper-frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\nimport LoginView from '../views/login/LoginView.vue'\nimport AdminLayout from '../views/admin/AdminLayout.vue'\nimport TeacherLayout from '../views/teacher/TeacherLayout.vue'\nimport StudentView from '../views/student/StudentView.vue'\n\nconst routes = [\n  {\n    path: '/',\n    redirect: '/login'\n  },\n  {\n    path: '/login',\n    name: 'Login',\n    component: LoginView\n  },\n  {\n    path: '/admin',\n    component: AdminLayout,\n    children: [\n      {\n        path: 'import',\n        component: () => import('../views/admin/ImportView.vue')\n      },\n      {\n        path: 'scores',\n        component: () => import('../views/admin/ScoresView.vue')\n      }\n    ],\n    meta: { requiresAuth: true, role: 'admin' }\n  },\n  {\n    path: '/teacher',\n    component: TeacherLayout,\n    children: [\n      {\n        path: 'query',\n        component: () => import('../views/teacher/QueryView.vue')\n      },\n      {\n        path: 'scores',\n        component: () => import('../views/teacher/ScoresView.vue')\n      }\n    ],\n    meta: { requiresAuth: true, role: 'teacher' }\n  },\n  {\n    path: '/student',\n    component: StudentView,\n    meta: { requiresAuth: true, role: 'student' }\n  }\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\n// 路由守卫\nrouter.beforeEach((to, from, next) => {\n  const role = localStorage.getItem('role')\n  const username = localStorage.getItem('username')\n  \n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    if (!username) {  // 使用 username 检查登录状态\n      next('/login')\n    } else if (to.meta.role && to.meta.role !== role) {\n      next('/login')\n    } else {\n      next()\n    }\n  } else {\n    if (username && to.path === '/login') {  // 使用 username 检查登录状态\n      next(`/${role}`)\n    } else {\n      next()\n    }\n  }\n})\n\nexport default router"],"mappings":";;AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,SAAS,MAAM,8BAA8B;AACpD,OAAOC,WAAW,MAAM,gCAAgC;AACxD,OAAOC,aAAa,MAAM,oCAAoC;AAC9D,OAAOC,WAAW,MAAM,kCAAkC;AAE1D,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,QAAQ,EAAE;AACZ,CAAC,EACD;EACED,IAAI,EAAE,QAAQ;EACdE,IAAI,EAAE,OAAO;EACbC,SAAS,EAAER;AACb,CAAC,EACD;EACEK,IAAI,EAAE,QAAQ;EACdG,SAAS,EAAEP,WAAW;EACtBQ,QAAQ,EAAE,CACR;IACEJ,IAAI,EAAE,QAAQ;IACdG,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,+BAA+B;EACzD,CAAC,EACD;IACEH,IAAI,EAAE,QAAQ;IACdG,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,+BAA+B;EACzD,CAAC,CACF;EACDE,IAAI,EAAE;IAAEC,YAAY,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAQ;AAC5C,CAAC,EACD;EACEP,IAAI,EAAE,UAAU;EAChBG,SAAS,EAAEN,aAAa;EACxBO,QAAQ,EAAE,CACR;IACEJ,IAAI,EAAE,OAAO;IACbG,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,gCAAgC;EAC1D,CAAC,EACD;IACEH,IAAI,EAAE,QAAQ;IACdG,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,iCAAiC;EAC3D,CAAC,CACF;EACDE,IAAI,EAAE;IAAEC,YAAY,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAU;AAC9C,CAAC,EACD;EACEP,IAAI,EAAE,UAAU;EAChBG,SAAS,EAAEL,WAAW;EACtBO,IAAI,EAAE;IAAEC,YAAY,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAU;AAC9C,CAAC,CACF;AAED,MAAMC,MAAM,GAAGf,YAAY,CAAC;EAC1BgB,OAAO,EAAEf,gBAAgB,CAACgB,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/Cb;AACF,CAAC,CAAC;;AAEF;AACAS,MAAM,CAACK,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMT,IAAI,GAAGU,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EACzC,MAAMC,QAAQ,GAAGF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EAEjD,IAAIJ,EAAE,CAACM,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACjB,IAAI,CAACC,YAAY,CAAC,EAAE;IACvD,IAAI,CAACa,QAAQ,EAAE;MAAG;MAChBH,IAAI,CAAC,QAAQ,CAAC;IAChB,CAAC,MAAM,IAAIF,EAAE,CAACT,IAAI,CAACE,IAAI,IAAIO,EAAE,CAACT,IAAI,CAACE,IAAI,KAAKA,IAAI,EAAE;MAChDS,IAAI,CAAC,QAAQ,CAAC;IAChB,CAAC,MAAM;MACLA,IAAI,CAAC,CAAC;IACR;EACF,CAAC,MAAM;IACL,IAAIG,QAAQ,IAAIL,EAAE,CAACd,IAAI,KAAK,QAAQ,EAAE;MAAG;MACvCgB,IAAI,CAAC,IAAIT,IAAI,EAAE,CAAC;IAClB,CAAC,MAAM;MACLS,IAAI,CAAC,CAAC;IACR;EACF;AACF,CAAC,CAAC;AAEF,eAAeR,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}