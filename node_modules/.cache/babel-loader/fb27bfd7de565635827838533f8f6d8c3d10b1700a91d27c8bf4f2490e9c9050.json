{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, withKeys as _withKeys, createTextVNode as _createTextVNode, withModifiers as _withModifiers, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"login-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" 模板部分保持不变 \"), _createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    class: \"login-card\"\n  }, {\n    header: _withCtx(() => _cache[3] || (_cache[3] = [_createElementVNode(\"h2\", null, \"体测成绩管理系统\", -1 /* HOISTED */)])),\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      model: $setup.loginForm,\n      rules: $setup.rules,\n      ref: \"loginFormRef\",\n      onSubmit: _withModifiers($setup.handleLogin, [\"prevent\"])\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        prop: \"username\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.loginForm.username,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.loginForm.username = $event),\n          placeholder: \"用户名\",\n          \"prefix-icon\": \"User\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        prop: \"password\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.loginForm.password,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.loginForm.password = $event),\n          type: \"password\",\n          placeholder: \"密码\",\n          \"prefix-icon\": \"Lock\",\n          \"show-password\": \"\",\n          onKeyup: _withKeys($setup.handleLogin, [\"enter\"])\n        }, null, 8 /* PROPS */, [\"modelValue\", \"onKeyup\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        prop: \"role\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $setup.loginForm.role,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.loginForm.role = $event),\n          placeholder: \"请选择角色\",\n          style: {\n            \"width\": \"100%\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_option, {\n            label: \"管理员\",\n            value: \"admin\"\n          }), _createVNode(_component_el_option, {\n            label: \"教师\",\n            value: \"teacher\"\n          }), _createVNode(_component_el_option, {\n            label: \"学生\",\n            value: \"student\"\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          loading: $setup.loading,\n          style: {\n            \"width\": \"100%\"\n          },\n          onClick: _withModifiers($setup.handleLogin, [\"prevent\"])\n        }, {\n          default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\" 登录 \")])),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"loading\", \"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\", \"rules\", \"onSubmit\"])]),\n    _: 1 /* STABLE */\n  })])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createCommentVNode","_createElementVNode","_hoisted_1","_createVNode","_component_el_card","header","_withCtx","_cache","default","_component_el_form","model","$setup","loginForm","rules","ref","onSubmit","_withModifiers","handleLogin","_component_el_form_item","prop","_component_el_input","modelValue","username","$event","placeholder","_","password","type","onKeyup","_withKeys","_component_el_select","role","style","_component_el_option","label","value","_component_el_button","loading","onClick","_createTextVNode"],"sources":["C:\\Users\\陈章宇\\Desktop\\test\\分步骤完成\\v7\\frontend\\paper-frontend\\src\\views\\login\\LoginView.vue"],"sourcesContent":["<template>\n  <!-- 模板部分保持不变 -->\n  <div class=\"login-container\">\n    <el-card class=\"login-card\">\n      <template #header>\n        <h2>体测成绩管理系统</h2>\n      </template>\n      \n      <el-form \n        :model=\"loginForm\" \n        :rules=\"rules\" \n        ref=\"loginFormRef\"\n        @submit.prevent=\"handleLogin\"\n      >\n        <el-form-item prop=\"username\">\n          <el-input \n            v-model=\"loginForm.username\" \n            placeholder=\"用户名\"\n            prefix-icon=\"User\"\n          />\n        </el-form-item>\n        \n        <el-form-item prop=\"password\">\n          <el-input \n            v-model=\"loginForm.password\" \n            type=\"password\" \n            placeholder=\"密码\"\n            prefix-icon=\"Lock\"\n            show-password\n            @keyup.enter=\"handleLogin\"\n          />\n        </el-form-item>\n\n        <el-form-item prop=\"role\">\n          <el-select \n            v-model=\"loginForm.role\" \n            placeholder=\"请选择角色\"\n            style=\"width: 100%\"\n          >\n            <el-option label=\"管理员\" value=\"admin\" />\n            <el-option label=\"教师\" value=\"teacher\" />\n            <el-option label=\"学生\" value=\"student\" />\n          </el-select>\n        </el-form-item>\n\n        <el-form-item>\n          <el-button \n            type=\"primary\" \n            :loading=\"loading\"\n            style=\"width: 100%\"\n            @click.prevent=\"handleLogin\"\n          >\n            登录\n          </el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { ElMessage } from 'element-plus'\nimport { authApi } from '@/api'\n\nexport default {\n  name: 'LoginView',\n  setup() {\n    const router = useRouter()\n    const loginFormRef = ref(null)\n    const loading = ref(false)\n\n    const loginForm = reactive({\n      username: '',\n      password: '',\n      role: ''\n    })\n\n    const rules = {\n      username: [\n        { required: true, message: '请输入用户名', trigger: 'blur' }\n      ],\n      password: [\n        { required: true, message: '请输入密码', trigger: 'blur' }\n      ],\n      role: [\n        { required: true, message: '请选择角色', trigger: 'change' }\n      ]\n    }\n\n    const testClick = () => {\n      console.log('按钮被点击')\n      console.log('表单数据:', loginForm)\n      console.log('表单引用:', loginFormRef.value)\n    }\n\n    const checkNetworkConnection = () => {\n      if (!navigator.onLine) {\n        ElMessage.error('网络连接已断开，请检查网络设置')\n        return false\n      }\n      return true\n    }\n\nconst handleLogin = async () => {\n  console.log('开始登录处理', new Date().toISOString())\n  \n  if (!loginFormRef.value) {\n    console.error('表单引用不存在')\n    return\n  }\n\n  try {\n    // 表单验证\n    const valid = await loginFormRef.value.validate()\n    if (!valid) {\n      console.log('表单验证失败')\n      return\n    }\n\n    loading.value = true\n    console.log('发送登录请求，数据:', {\n      username: loginForm.username,\n      password: loginForm.password,\n      role: loginForm.role\n    })\n\n    // 直接发送请求到完整的URL\n    const response = await fetch('http://192.168.203.240:8080/api/auth/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: loginForm.username,\n        password: loginForm.password,\n        role: loginForm.role\n      })\n    })\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`)\n    }\n\n    const res = await response.json()\n    console.log('登录响应:', res)\n\n    if (res.code === 200 && res.data) {\n      // 存储用户信息\n      localStorage.setItem('user', JSON.stringify(res.data))\n      localStorage.setItem('role', loginForm.role)\n      localStorage.setItem('username', loginForm.username)\n\n      ElMessage.success('登录成功')\n\n      // 根据角色跳转\n      const routes = {\n        admin: '/admin',\n        teacher: '/teacher',\n        student: '/student'\n      }\n\n      const targetRoute = routes[loginForm.role]\n      if (targetRoute) {\n        console.log('准备跳转到:', targetRoute)\n        await router.push(targetRoute)\n      }\n    } else {\n      throw new Error(res.message || '登录失败')\n    }\n  } catch (error) {\n    console.error('登录错误:', error)\n    let errorMessage = '登录失败'\n    \n    if (error instanceof TypeError && error.message === 'Failed to fetch') {\n      errorMessage = '无法连接到服务器，请检查网络连接'\n    } else if (error.name === 'AbortError') {\n      errorMessage = '请求已取消'\n    } else {\n      errorMessage = error.message || '登录失败，请稍后重试'\n    }\n    \n    ElMessage.error(errorMessage)\n  } finally {\n    loading.value = false\n  }\n}\n\n    onMounted(() => {\n      console.log('组件已挂载')\n      console.log('表单引用状态:', loginFormRef.value)\n      console.log('当前网络状态:', navigator.onLine ? '在线' : '离线')\n\n      window.addEventListener('online', () => {\n        console.log('网络已连接')\n        ElMessage.success('网络已连接')\n      })\n\n      window.addEventListener('offline', () => {\n        console.log('网络已断开')\n        ElMessage.error('网络已断开，请检查网络设置')\n      })\n    })\n\n    return {\n      loginFormRef,\n      loginForm,\n      loading,\n      rules,\n      handleLogin\n    }\n  }\n}\n</script>\n\n<style scoped>\n.login-container {\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #f5f7fa;\n}\n\n.login-card {\n  width: 400px;\n}\n\n.el-form-item {\n  margin-bottom: 20px;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}