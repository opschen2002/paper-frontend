{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport { ref } from 'vue';\nimport { ElMessage } from 'element-plus';\nexport default {\n  name: 'FileUpload',\n  props: {\n    action: {\n      type: String,\n      required: true\n    },\n    accept: {\n      type: String,\n      default: '.xlsx,.xls'\n    },\n    tip: {\n      type: String,\n      default: '只能上传 Excel 文件'\n    },\n    maxSize: {\n      type: Number,\n      default: 5 // MB\n    }\n  },\n  emits: ['upload-success', 'upload-error'],\n  setup(props, {\n    emit\n  }) {\n    const headers = ref({\n      // 可以添加token等认证信息\n    });\n    const beforeUpload = file => {\n      const isValidType = props.accept.split(',').some(type => file.name.toLowerCase().endsWith(type.replace('.', '')));\n      const isLessThanMaxSize = file.size / 1024 / 1024 < props.maxSize;\n      if (!isValidType) {\n        ElMessage.error('请上传正确的文件格式！');\n        return false;\n      }\n      if (!isLessThanMaxSize) {\n        ElMessage.error(`文件大小不能超过 ${props.maxSize}MB！`);\n        return false;\n      }\n      return true;\n    };\n    const handleSuccess = response => {\n      ElMessage.success('上传成功！');\n      emit('upload-success', response);\n    };\n    const handleError = error => {\n      ElMessage.error('上传失败！');\n      emit('upload-error', error);\n    };\n    return {\n      headers,\n      beforeUpload,\n      handleSuccess,\n      handleError\n    };\n  }\n};","map":{"version":3,"names":["ref","ElMessage","name","props","action","type","String","required","accept","default","tip","maxSize","Number","emits","setup","emit","headers","beforeUpload","file","isValidType","split","some","toLowerCase","endsWith","replace","isLessThanMaxSize","size","error","handleSuccess","response","success","handleError"],"sources":["C:\\Users\\陈章宇\\Desktop\\test\\分步骤完成\\v7\\frontend\\paper-frontend\\src\\components\\common\\FileUpload.vue"],"sourcesContent":["<template>\n  <div class=\"upload-container\">\n    <el-upload\n      class=\"upload\"\n      :action=\"action\"\n      :headers=\"headers\"\n      :before-upload=\"beforeUpload\"\n      :on-success=\"handleSuccess\"\n      :on-error=\"handleError\"\n      :accept=\"accept\"\n    >\n      <template #trigger>\n        <el-button type=\"primary\">选择文件</el-button>\n      </template>\n      <template #tip>\n        <div class=\"tip\">{{ tip }}</div>\n      </template>\n    </el-upload>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport { ElMessage } from 'element-plus'\n\nexport default {\n  name: 'FileUpload',\n  props: {\n    action: {\n      type: String,\n      required: true\n    },\n    accept: {\n      type: String,\n      default: '.xlsx,.xls'\n    },\n    tip: {\n      type: String,\n      default: '只能上传 Excel 文件'\n    },\n    maxSize: {\n      type: Number,\n      default: 5 // MB\n    }\n  },\n  emits: ['upload-success', 'upload-error'],\n  setup(props, { emit }) {\n    const headers = ref({\n      // 可以添加token等认证信息\n    })\n\n    const beforeUpload = (file) => {\n      const isValidType = props.accept.split(',').some(type => \n        file.name.toLowerCase().endsWith(type.replace('.', ''))\n      )\n      \n      const isLessThanMaxSize = file.size / 1024 / 1024 < props.maxSize\n\n      if (!isValidType) {\n        ElMessage.error('请上传正确的文件格式！')\n        return false\n      }\n\n      if (!isLessThanMaxSize) {\n        ElMessage.error(`文件大小不能超过 ${props.maxSize}MB！`)\n        return false\n      }\n\n      return true\n    }\n\n    const handleSuccess = (response) => {\n      ElMessage.success('上传成功！')\n      emit('upload-success', response)\n    }\n\n    const handleError = (error) => {\n      ElMessage.error('上传失败！')\n      emit('upload-error', error)\n    }\n\n    return {\n      headers,\n      beforeUpload,\n      handleSuccess,\n      handleError\n    }\n  }\n}\n</script>\n\n<style scoped>\n.upload-container {\n  text-align: center;\n  padding: 20px;\n}\n\n.tip {\n  font-size: 12px;\n  color: #909399;\n  margin-top: 10px;\n}\n</style>"],"mappings":";;AAsBA,SAASA,GAAE,QAAS,KAAI;AACxB,SAASC,SAAQ,QAAS,cAAa;AAEvC,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE;IACLC,MAAM,EAAE;MACNC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDC,MAAM,EAAE;MACNH,IAAI,EAAEC,MAAM;MACZG,OAAO,EAAE;IACX,CAAC;IACDC,GAAG,EAAE;MACHL,IAAI,EAAEC,MAAM;MACZG,OAAO,EAAE;IACX,CAAC;IACDE,OAAO,EAAE;MACPN,IAAI,EAAEO,MAAM;MACZH,OAAO,EAAE,EAAE;IACb;EACF,CAAC;EACDI,KAAK,EAAE,CAAC,gBAAgB,EAAE,cAAc,CAAC;EACzCC,KAAKA,CAACX,KAAK,EAAE;IAAEY;EAAK,CAAC,EAAE;IACrB,MAAMC,OAAM,GAAIhB,GAAG,CAAC;MAClB;IAAA,CACD;IAED,MAAMiB,YAAW,GAAKC,IAAI,IAAK;MAC7B,MAAMC,WAAU,GAAIhB,KAAK,CAACK,MAAM,CAACY,KAAK,CAAC,GAAG,CAAC,CAACC,IAAI,CAAChB,IAAG,IAClDa,IAAI,CAAChB,IAAI,CAACoB,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAClB,IAAI,CAACmB,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CACxD;MAEA,MAAMC,iBAAgB,GAAIP,IAAI,CAACQ,IAAG,GAAI,IAAG,GAAI,IAAG,GAAIvB,KAAK,CAACQ,OAAM;MAEhE,IAAI,CAACQ,WAAW,EAAE;QAChBlB,SAAS,CAAC0B,KAAK,CAAC,aAAa;QAC7B,OAAO,KAAI;MACb;MAEA,IAAI,CAACF,iBAAiB,EAAE;QACtBxB,SAAS,CAAC0B,KAAK,CAAC,YAAYxB,KAAK,CAACQ,OAAO,KAAK;QAC9C,OAAO,KAAI;MACb;MAEA,OAAO,IAAG;IACZ;IAEA,MAAMiB,aAAY,GAAKC,QAAQ,IAAK;MAClC5B,SAAS,CAAC6B,OAAO,CAAC,OAAO;MACzBf,IAAI,CAAC,gBAAgB,EAAEc,QAAQ;IACjC;IAEA,MAAME,WAAU,GAAKJ,KAAK,IAAK;MAC7B1B,SAAS,CAAC0B,KAAK,CAAC,OAAO;MACvBZ,IAAI,CAAC,cAAc,EAAEY,KAAK;IAC5B;IAEA,OAAO;MACLX,OAAO;MACPC,YAAY;MACZW,aAAa;MACbG;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}