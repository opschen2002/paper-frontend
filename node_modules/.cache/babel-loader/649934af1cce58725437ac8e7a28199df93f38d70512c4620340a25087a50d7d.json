{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, resolveDirective as _resolveDirective, withDirectives as _withDirectives, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"student-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_descriptions_item = _resolveComponent(\"el-descriptions-item\");\n  const _component_el_descriptions = _resolveComponent(\"el-descriptions\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_empty = _resolveComponent(\"el-empty\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_ScoreCard = _resolveComponent(\"ScoreCard\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_withDirectives((_openBlock(), _createBlock(_component_el_row, {\n    gutter: 20\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_col, {\n      span: 8\n    }, {\n      default: _withCtx(() => [$setup.hasStudentInfo ? (_openBlock(), _createBlock(_component_el_card, {\n        key: 0\n      }, {\n        header: _withCtx(() => _cache[0] || (_cache[0] = [_createElementVNode(\"h3\", null, \"个人信息\", -1 /* HOISTED */)])),\n        default: _withCtx(() => [_createVNode(_component_el_descriptions, {\n          column: 1,\n          border: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_descriptions_item, {\n            label: \"学号\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.studentInfo.studentId), 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"姓名\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.studentInfo.name), 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"班级\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.studentInfo.className), 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"学院\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.studentInfo.college), 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })) : (_openBlock(), _createBlock(_component_el_empty, {\n        key: 1,\n        description: \"暂无学生信息\"\n      }))]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      span: 16\n    }, {\n      default: _withCtx(() => [$setup.hasScoreData ? (_openBlock(), _createBlock(_component_ScoreCard, {\n        key: 0,\n        \"score-data\": $setup.scoreData,\n        title: \"最新体测成绩\"\n      }, null, 8 /* PROPS */, [\"score-data\"])) : (_openBlock(), _createBlock(_component_el_empty, {\n        key: 1,\n        description: \"暂无成绩信息\"\n      }))]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })), [[_directive_loading, $setup.loading]])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createBlock","_component_el_row","gutter","default","_withCtx","_createVNode","_component_el_col","span","$setup","hasStudentInfo","_component_el_card","key","header","_cache","_createElementVNode","_component_el_descriptions","column","border","_component_el_descriptions_item","label","_createTextVNode","_toDisplayString","studentInfo","studentId","_","name","className","college","_component_el_empty","description","hasScoreData","_component_ScoreCard","scoreData","title","loading"],"sources":["C:\\Users\\陈章宇\\Desktop\\test\\分步骤完成\\v7\\frontend\\paper-frontend\\src\\views\\student\\StudentView.vue"],"sourcesContent":["<template>\n  <div class=\"student-container\">\n    <el-row :gutter=\"20\" v-loading=\"loading\">\n      <el-col :span=\"8\">\n        <el-card v-if=\"hasStudentInfo\">\n          <template #header>\n            <h3>个人信息</h3>\n          </template>\n          <el-descriptions :column=\"1\" border>\n            <el-descriptions-item label=\"学号\">\n              {{ studentInfo.studentId }}\n            </el-descriptions-item>\n            <el-descriptions-item label=\"姓名\">\n              {{ studentInfo.name }}\n            </el-descriptions-item>\n            <el-descriptions-item label=\"班级\">\n              {{ studentInfo.className }}\n            </el-descriptions-item>\n            <el-descriptions-item label=\"学院\">\n              {{ studentInfo.college }}\n            </el-descriptions-item>\n          </el-descriptions>\n        </el-card>\n        <el-empty v-else description=\"暂无学生信息\" />\n      </el-col>\n      <el-col :span=\"16\">\n        <ScoreCard\n          v-if=\"hasScoreData\"\n          :score-data=\"scoreData\"\n          title=\"最新体测成绩\"\n        />\n        <el-empty v-else description=\"暂无成绩信息\" />\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted } from 'vue'\nimport ScoreCard from '@/components/common/ScoreCard.vue'\nimport { studentApi } from '@/api'\nimport { ElMessage } from 'element-plus'\n\nexport default {\n  name: 'StudentView',\n  components: { ScoreCard },\n  setup() {\n    const studentInfo = ref({})\n    const scoreData = ref({})\n    const loading = ref(false)\n    const error = ref(null)\n    \n    const studentId = localStorage.getItem('username')\n    \n    const hasStudentInfo = computed(() => Object.keys(studentInfo.value).length > 0)\n    const hasScoreData = computed(() => Object.keys(scoreData.value).length > 0)\n\n    const loadData = async () => {\n      if (!studentId) {\n        ElMessage.error('未找到学号信息，请重新登录')\n        return\n      }\n\n      loading.value = true\n      error.value = null\n\n      try {\n        // 分开请求以便于单独处理错误\n        const info = await studentApi.getStudentInfo(studentId)\n        studentInfo.value = info\n        \n        try {\n          const score = await studentApi.getPersonalScore(studentId)\n          scoreData.value = score\n        } catch (scoreError) {\n          console.error('获取成绩失败:', scoreError)\n          ElMessage.warning('获取成绩信息失败')\n        }\n      } catch (error) {\n        console.error('获取学生信息失败:', error)\n        ElMessage.error(error.message || '获取学生信息失败')\n        error.value = error\n      } finally {\n        loading.value = false\n      }\n    }\n\n    onMounted(loadData)\n\n    return {\n      studentInfo,\n      scoreData,\n      loading,\n      error,\n      hasStudentInfo,\n      hasScoreData\n    }\n  }\n}\n</script>\n\n<style scoped>\n.student-container {\n  padding: 20px;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAmB;;;;;;;;;;uBAA9BC,mBAAA,CAiCM,OAjCNC,UAiCM,G,+BAhCJC,YAAA,CA+BSC,iBAAA;IA/BAC,MAAM,EAAE;EAAE;IAFvBC,OAAA,EAAAC,QAAA,CAGM,MAqBS,CArBTC,YAAA,CAqBSC,iBAAA;MArBAC,IAAI,EAAE;IAAC;MAHtBJ,OAAA,EAAAC,QAAA,CAKE,MAsBA,CAvBqBI,MAAA,CAAAC,cAAc,I,cAA7BT,YAAA,CAkBUU,kBAAA;QAtBlBC,GAAA;MAAA;QAKqBC,MAAM,EAAAR,QAAA,CACf,MAAaS,MAAA,QAAAA,MAAA,OAAbC,mBAAA,CAAa,YAAT,MAAI,oB;QANpBX,OAAA,EAAAC,QAAA,CAQU,MAakB,CAblBC,YAAA,CAakBU,0BAAA;UAbAC,MAAM,EAAE,CAAC;UAAEC,MAAM,EAAN;;UARvCd,OAAA,EAAAC,QAAA,CASY,MAEuB,CAFvBC,YAAA,CAEuBa,+BAAA;YAFDC,KAAK,EAAC;UAAI;YAT5ChB,OAAA,EAAAC,QAAA,CAUc,MAA2B,CAVzCgB,gBAAA,CAAAC,gBAAA,CAUiBb,MAAA,CAAAc,WAAW,CAACC,SAAS,iB;YAVtCC,CAAA;cAYYnB,YAAA,CAEuBa,+BAAA;YAFDC,KAAK,EAAC;UAAI;YAZ5ChB,OAAA,EAAAC,QAAA,CAac,MAAsB,CAbpCgB,gBAAA,CAAAC,gBAAA,CAaiBb,MAAA,CAAAc,WAAW,CAACG,IAAI,iB;YAbjCD,CAAA;cAeYnB,YAAA,CAEuBa,+BAAA;YAFDC,KAAK,EAAC;UAAI;YAf5ChB,OAAA,EAAAC,QAAA,CAgBc,MAA2B,CAhBzCgB,gBAAA,CAAAC,gBAAA,CAgBiBb,MAAA,CAAAc,WAAW,CAACI,SAAS,iB;YAhBtCF,CAAA;cAkBYnB,YAAA,CAEuBa,+BAAA;YAFDC,KAAK,EAAC;UAAI;YAlB5ChB,OAAA,EAAAC,QAAA,CAmBc,MAAyB,CAnBvCgB,gBAAA,CAAAC,gBAAA,CAmBiBb,MAAA,CAAAc,WAAW,CAACK,OAAO,iB;YAnBpCH,CAAA;;UAAAA,CAAA;;QAAAA,CAAA;2BAuBQxB,YAAA,CAAwC4B,mBAAA;QAvBhDjB,GAAA;QAuByBkB,WAAW,EAAC;;MAvBrCL,CAAA;QAyBMnB,YAAA,CAOSC,iBAAA;MAPAC,IAAI,EAAE;IAAE;MAzBvBJ,OAAA,EAAAC,QAAA,CA8BuB,MAIrB,CAPcI,MAAA,CAAAsB,YAAY,I,cADpB9B,YAAA,CAIE+B,oBAAA;QA9BVpB,GAAA;QA4BW,YAAU,EAAEH,MAAA,CAAAwB,SAAS;QACtBC,KAAK,EAAC;gEAERjC,YAAA,CAAwC4B,mBAAA;QA/BhDjB,GAAA;QA+ByBkB,WAAW,EAAC;;MA/BrCL,CAAA;;IAAAA,CAAA;6BAEoChB,MAAA,CAAA0B,OAAO,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}